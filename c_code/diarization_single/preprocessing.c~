#include<stdio.h>
#include<stdlib.h>
#include "../to_jit/front-end-dsp/src/fe/FrontEndDefs.h"
#include "../to_jit/front-end-dsp/src/fe/FrontEndTypes.h"
#include "../to_jit/front-end-dsp/src/fe/VQ_Modified.h"
#include "../to_jit/front-end-dsp/src/fe/InitAsdf.h"
#include "../to_jit/front-end-dsp/src/fe/DspLibrary.h"
#include<math.h>

#define Max_Segs 5000
#define DIM 19
#define MAX_NUM_FEATURES 100000

int main(int argc, char *argv[]){
  if(argc < 3){
    fprintf(stderr, "Usage: <binary> <path to feature file(HTK format)>  <path to .scp file>\n");
    exit(0);
  }

  //open feature file(HTK format) and convert to ASCII and write it
  char buffer[512];
  snprintf(buffer, sizeof(buffer), "/usr/local/bin/HList -r %s > feature_file_all.txt", argv[1]);
  if(system(buffer) < 0){
    fprintf(stderr, "unable to open HTK binary file: HList or paths to files are wrong\nExiting\n");
    exit(0);
  }
  
  FILE *feat_file, *scp_file;
  feat_file = fopen("feature_file_all.txt", "r");
  if(feat_file == NULL){
    fprintf(stderr, "unable to open feature_file_all.txt\n");
    exit(0);
  }
  
  scp_file = fopen(argv[2], "r");
  if(scp_file == NULL){
    fprintf(stderr, "unable to open scp file\n");
    exit(0);
  }
  
  int voiced_segs[Max_Segs][2];int i = 0, j= 0, count = 0;

  while(!feof(scp_file)){
    char line[512]; //to store the whole line
    fscanf(scp_file, "%s", line);
    // printf("%s\n", line);
    char start[20], end[20];
    i = 0;
    while(line[i] != '_')
      i++;
    for(j = 0,i++; line[i] != '_'; j++,i++)
      start[j] = line[i];
    for(j=0, i++; line[i] != '='; i++, j++)
      end[j] = line[i];
    int s = atoi(start);
    int e = atoi(end);
    voiced_segs[count][0] = s;
    voiced_segs[count][1] = e;
    //printf("%d  %d \n", s, e);
    count++;
  }
  short int flag[MAX_NUM_FEATURES];
  //process feature file and drop all unvoiced frames 
  int                                 TotalFeatures=0;
  int                                 count_segs = 0;
  VECTOR_OF_F_VECTORS                 *features; //check memory access (need to allocate more space)
  F_VECTOR                            *feat;
  features = (VECTOR_OF_F_VECTORS *)calloc(MAX_NUM_FEATURES, sizeof(VECTOR_OF_F_VECTORS));
  feat = (F_VECTOR *)AllocFVector(DIM);
  for(i = 0; i < MAX_NUM_FEATURES; i++){
    features[i] = (F_VECTOR *)AllocFVector(DIM);
  }
  
  if(!features || !feat){
    fprintf(stderr, "unable to allocate memory\n");
    exit(0);
  }
  count = 0; //count actual feature vectors
  i = 0; // count file feature vectors
  while(!feof(feat_file)){
    i++;
    //check count_seg
    if(i == voiced_segs[count_segs][1])
      count_segs++;
    float number = 0;
    for(j = 0; j < DIM; j++){
      fscanf(feat_file, "%f", &number);
      feat->array[j] = number;
    }
    //check if i is voiced feature vector or not
    if(!(i > voiced_segs[count_segs][0] && i < voiced_segs[count_segs][1])){
      continue;
    }
    else{
      //this feature vector is voiced 
      for(j = 0; j < DIM; j++)
	features[count]->array[j] = feat->array[j];
      features[count]->numElements = DIM;
      count++;
      //      printf("%d  ", i);
    }

  }
  TotalFeatures = count;
  for(i = 0; i < 0; i++){
    for(j = 0;j < DIM; j++)
      printf("%f ", features[i]->array[j]);
    printf("\n");
  }
  fclose(feat_file);
  fclose(scp_file);  
}

/******************************************************************************
   AllocFVector : Allocate space for a variable of type F_VECTOR with an 
   array size of numPts.
   inputs : npts
   outputs : an F_VECTOR of size npts
******************************************************************************/

F_VECTOR *AllocFVector(int npts) {
   F_VECTOR *fVect;
   fVect = (F_VECTOR *) malloc(1*sizeof(F_VECTOR));
   if (fVect == NULL) {
     printf("unable to allocate FVector \n");
     exit(-1);
   }
   fVect->numElements = npts;
   fVect->array = (float *) calloc(npts, sizeof(float));
   if (fVect->array == NULL) {
     printf("unable to allocate FVector array \n");
     exit(-1);
   } else
    return(fVect);
 }
